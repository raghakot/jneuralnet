/*
 * Copyright (c) 2008-2009 Kotikalapudi Raghavendra. All Rights Reserved.
 *
 * Licensed under the Creative Commons License Attribution-NonCommercial-ShareAlike 3.0,
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://creativecommons.org/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package jneuralnet.core.datastore;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import jneuralnet.util.DBConnectionProvider;

/**
 * Provides the configuration panel for MySQLDataStore...
 * 
 * @author Ragha
 * @see MySQLDataStore
 */
class MySQLConfigPanel extends DataStoreConfigPanel
{
    private static final long serialVersionUID = 6376801734711133882L;

    //flag to represent db connection...
    private boolean isConnActive = false;
    // the data store on which settings are to be applied...
    private MySQLDataStore ds;

    /** Creates new form MySQLConfigPanel */
    public MySQLConfigPanel(AbstractDataStore dataStore) {
        super(dataStore);
        ds = (MySQLDataStore) dataStore;
        initComponents();
        lblConnStatus.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXTitledSeparator1 = new org.jdesktop.swingx.JXTitledSeparator();
        jXTitledSeparator2 = new org.jdesktop.swingx.JXTitledSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        txtHost = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        btnConnect = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblConnStatus = new javax.swing.JLabel()
        {
            public void paint(Graphics g)
            {
                super.paint(g);
                Graphics2D g2d = (Graphics2D) g.create();

                if(isConnActive)
                g2d.setColor(Color.GREEN);
                else
                g2d.setColor(Color.RED);

                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2d.fillOval(0, 0, lblConnStatus.getWidth(),
                    lblConnStatus.getHeight());
            }
        }
        ;
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtReadOutputColumns = new javax.swing.JTextField();
        txtReadInputColumns = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxReadTblName = new javax.swing.JComboBox();
        cbxReadDBName = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ckbClearAndPopulate = new javax.swing.JCheckBox();
        cbxWriteDBName = new javax.swing.JComboBox();
        cbxWriteTblName = new javax.swing.JComboBox();
        txtWriteInputColumns = new javax.swing.JTextField();
        txtWriteOutputColumns = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnApply = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jXTitledSeparator1.setTitle(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jXTitledSeparator1.title")); // NOI18N

        jXTitledSeparator2.setTitle(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jXTitledSeparator2.title")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel1.text")); // NOI18N

        txtUser.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtUser.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel5.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel6.text")); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel7.text")); // NOI18N

        txtPort.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtPort.text")); // NOI18N

        txtHost.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtHost.text")); // NOI18N

        txtPass.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtPass.text")); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnConnect.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.btnConnect.text")); // NOI18N
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel11.text")); // NOI18N

        lblConnStatus.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.lblConnStatus.text")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 416, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblConnStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConnect)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblConnStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, lblConnStatus});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                .addGap(153, 153, 153)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtHost, txtPass, txtPort, txtUser});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel4.text")); // NOI18N

        txtReadOutputColumns.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtReadOutputColumns.text")); // NOI18N

        txtReadInputColumns.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtReadInputColumns.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel3.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel2.text")); // NOI18N

        cbxReadDBName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxReadDBNameActionPerformed(evt);
            }
        });

        jLabel12.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel12.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(txtReadOutputColumns))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxReadDBName, 0, 204, Short.MAX_VALUE)
                                .addComponent(cbxReadTblName, 0, 204, Short.MAX_VALUE)
                                .addComponent(txtReadInputColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))))
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbxReadDBName, cbxReadTblName, txtReadInputColumns, txtReadOutputColumns});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbxReadDBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxReadTblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReadInputColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtReadOutputColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ckbClearAndPopulate.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.ckbClearAndPopulate.text")); // NOI18N
        ckbClearAndPopulate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbClearAndPopulateStateChanged(evt);
            }
        });

        cbxWriteDBName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxWriteDBNameActionPerformed(evt);
            }
        });

        txtWriteInputColumns.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtWriteInputColumns.text")); // NOI18N

        txtWriteOutputColumns.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.txtWriteOutputColumns.text")); // NOI18N

        jLabel8.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel8.text")); // NOI18N

        jLabel9.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel9.text")); // NOI18N

        jLabel10.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel10.text")); // NOI18N

        jLabel14.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.jLabel14.text")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtWriteOutputColumns))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10))
                                    .addGap(26, 26, 26)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtWriteInputColumns, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                        .addComponent(cbxWriteDBName, javax.swing.GroupLayout.Alignment.LEADING, 0, 204, Short.MAX_VALUE)
                                        .addComponent(cbxWriteTblName, javax.swing.GroupLayout.Alignment.LEADING, 0, 204, Short.MAX_VALUE))))
                            .addComponent(jLabel14)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ckbClearAndPopulate, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbxWriteDBName, cbxWriteTblName, txtWriteInputColumns, txtWriteOutputColumns});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cbxWriteDBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbxWriteTblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtWriteInputColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtWriteOutputColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ckbClearAndPopulate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnApply.setText(org.openide.util.NbBundle.getMessage(MySQLConfigPanel.class, "MySQLConfigPanel.btnApply.text")); // NOI18N
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(586, Short.MAX_VALUE)
                .addComponent(btnApply, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnApply)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jXTitledSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addComponent(jXTitledSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXTitledSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXTitledSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        //set up read info...
        if(cbxReadDBName.getItemCount() > 0)
            ds.setReadDBName(cbxReadDBName.getSelectedItem().toString());
        if(cbxReadTblName.getItemCount() > 0)
            ds.setReadTblName(cbxReadTblName.getSelectedItem().toString());

        String inputCols[] = txtReadInputColumns.getText().trim().split(",");
        String outputCols[] = txtReadOutputColumns.getText().trim().split(",");
        for(int i=0; i<inputCols.length;i++)
            inputCols[i] = inputCols[i].trim();
        for(int i=0; i<outputCols.length;i++)
            outputCols[i] = outputCols[i].trim();
        ds.setReadInputCols(inputCols);
        ds.setReadOutputCols(outputCols);

        //set up write info...
        if(cbxWriteDBName.getItemCount() > 0)
            ds.setWriteDBName(cbxWriteDBName.getSelectedItem().toString());
        if(cbxWriteTblName.getItemCount() > 0)
            ds.setWriteTblName(cbxWriteTblName.getSelectedItem().toString());

        inputCols = txtWriteInputColumns.getText().trim().split(",");
        outputCols = txtWriteOutputColumns.getText().trim().split(",");
        for(int i=0; i<inputCols.length;i++)
            inputCols[i] = inputCols[i].trim();
        for(int i=0; i<outputCols.length;i++)
            outputCols[i] = outputCols[i].trim();
        ds.setWriteInputCols(inputCols);
        ds.setWriteOutputCols(outputCols);
}//GEN-LAST:event_btnApplyActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        try
        {
            int port = Integer.parseInt(txtPort.getText());
            String pass = "";
            for(char ch : txtPass.getPassword())
                pass += ch;
            String host = txtHost.getText();
            String user = txtUser.getText();

            isConnActive = DBConnectionProvider
                    .checkConnection(host, port , user, pass);

            DBConnectionProvider.setHost(host);
            DBConnectionProvider.setPort(port);
            DBConnectionProvider.setUser(user);
            DBConnectionProvider.setPass(pass);
            populate();
            ds.setDBInfo(host, port);
            ds.setUserInfo(user, pass);
        }
        catch(Exception e)
        {
            isConnActive = false;
            JOptionPane.showMessageDialog(this, "Connection failed due to:" +
                    " \n" + e.getMessage());
        }
        finally
        {
            lblConnStatus.repaint();
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void cbxReadDBNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxReadDBNameActionPerformed
        if(cbxReadDBName.getSelectedIndex() <= 0)
            return;

        String dbName = cbxReadDBName.getSelectedItem().toString();
        try
        {
            ArrayList<String> tblList = DBConnectionProvider.getTables(dbName);
            cbxReadTblName.removeAllItems();
            for(String s : tblList)
                cbxReadTblName.addItem(s);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Failed to populate data " +
                    "due to: \n" + e.getMessage());
        }
    }//GEN-LAST:event_cbxReadDBNameActionPerformed

    private void cbxWriteDBNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxWriteDBNameActionPerformed
        if(cbxWriteDBName.getSelectedIndex() <= 0)
            return;

        String dbName = cbxWriteDBName.getSelectedItem().toString();
        try
        {
            ArrayList<String> tblList = DBConnectionProvider.getTables(dbName);
            cbxWriteTblName.removeAllItems();
            for(String s : tblList)
                cbxWriteTblName.addItem(s);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Failed to populate data " +
                    "due to: \n" + e.getMessage());
        }
    }//GEN-LAST:event_cbxWriteDBNameActionPerformed

    private void ckbClearAndPopulateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbClearAndPopulateStateChanged
        ds.setFlushOnWrite(ckbClearAndPopulate.isSelected());
    }//GEN-LAST:event_ckbClearAndPopulateStateChanged

    /**
     * populates the database combo boxes...
     */
    private void populate()
    {
        try
        {
            ArrayList<String> dbList = DBConnectionProvider.getDBList();            
            cbxReadDBName.removeAllItems();
            cbxWriteDBName.removeAllItems();
            for(String s : dbList)
            {
                cbxReadDBName.addItem(s);
                cbxWriteDBName.addItem(s);
            }            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Failed to populate data " +
                    "due to: \n" + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnConnect;
    private javax.swing.JComboBox cbxReadDBName;
    private javax.swing.JComboBox cbxReadTblName;
    private javax.swing.JComboBox cbxWriteDBName;
    private javax.swing.JComboBox cbxWriteTblName;
    private javax.swing.JCheckBox ckbClearAndPopulate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private org.jdesktop.swingx.JXTitledSeparator jXTitledSeparator1;
    private org.jdesktop.swingx.JXTitledSeparator jXTitledSeparator2;
    private javax.swing.JLabel lblConnStatus;
    private javax.swing.JTextField txtHost;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtReadInputColumns;
    private javax.swing.JTextField txtReadOutputColumns;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtWriteInputColumns;
    private javax.swing.JTextField txtWriteOutputColumns;
    // End of variables declaration//GEN-END:variables
}
